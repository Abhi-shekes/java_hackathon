/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.99
 * Generated at: 2025-04-08 19:13:49 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("    <title>ChatWave - Modern Team Communication</title>\n");
      out.write("    <script src=\"https://cdn.tailwindcss.com\"></script>\n");
      out.write("    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\" rel=\"stylesheet\">\n");
      out.write("    <script src=\"https://unpkg.com/lucide@latest/dist/umd/lucide.js\"></script>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: 'Inter', sans-serif;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n");
      out.write("\n");
      out.write("  if (!SpeechRecognition) {\n");
      out.write("    alert(\"Speech Recognition is not supported in this browser.\");\n");
      out.write("  } else {\n");
      out.write("    const recognition = new SpeechRecognition();\n");
      out.write("    recognition.continuous = true;\n");
      out.write("    recognition.lang = \"en-US\";\n");
      out.write("    recognition.interimResults = false;\n");
      out.write("\n");
      out.write("    recognition.onstart = () => {\n");
      out.write("      console.log(\"ðï¸ Voice recognition activated. Try speaking.\");\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    recognition.onresult = (event) => {\n");
      out.write("      const transcript = event.results[event.results.length - 1][0].transcript;\n");
      out.write("      console.log(\"ð¤ Heard:\", transcript);\n");
      out.write("\n");
      out.write("      // Display in DOM\n");
      out.write("      const heardEl = document.getElementById(\"heard\");\n");
      out.write("      if (heardEl) {\n");
      out.write("        heardEl.textContent = transcript;\n");
      out.write("      } else {\n");
      out.write("        console.warn(\"Element with id='heard' not found. Cannot display transcript.\");\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      // Normalize transcript\n");
      out.write("      const normalized = transcript.trim().toLowerCase();\n");
      out.write("      console.log(\"ð Normalized Command:\", normalized);\n");
      out.write("\n");
      out.write("      const triggerPhrases = [\"hey\", \"heyyyy\", \"heeyyy\"];\n");
      out.write("      const isTriggered = triggerPhrases.some(phrase => normalized.includes(phrase));\n");
      out.write("\n");
      out.write("      if (!isTriggered) {\n");
      out.write("        console.log(\"â Ignoring command. Prefix 'hey ' not found.\");\n");
      out.write("        return;\n");
      out.write("      }\n");
      out.write("\n");
      out.write("      let actionPart = normalized;\n");
      out.write("      triggerPhrases.forEach(phrase => {\n");
      out.write("        if (actionPart.includes(phrase)) {\n");
      out.write("          actionPart = actionPart.replace(phrase, \"\").trim();\n");
      out.write("        }\n");
      out.write("      });\n");
      out.write("\n");
      out.write("      if (actionPart === \"login page\") {\n");
      out.write("        console.log(\"ð Redirecting to login.jsp\");\n");
      out.write("        window.location.href = \"login.jsp\";\n");
      out.write("      } else if (actionPart === \"sign up page\") {\n");
      out.write("        console.log(\"ð Redirecting to register.jsp\");\n");
      out.write("        window.location.href = \"signup.jsp\";\n");
      out.write("      } else {\n");
      out.write("        console.log(\"ð¤ Unknown command:\", actionPart);\n");
      out.write("      }\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    recognition.onerror = (event) => {\n");
      out.write("      console.error(\"ð¤ Error:\", event.error);\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    recognition.onend = () => {\n");
      out.write("      console.log(\"ðï¸ Voice recognition stopped. Restarting...\");\n");
      out.write("      recognition.start(); // Keep it running continuously\n");
      out.write("    };\n");
      out.write("\n");
      out.write("    recognition.start();\n");
      out.write("  }\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("\n");
      out.write("<body class=\"bg-gray-50 min-h-screen\">\n");
      out.write("    <!-- Header -->\n");
      out.write("    <header class=\"bg-white shadow-sm fixed w-full z-10\">\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n");
      out.write("            <div class=\"flex justify-between h-16\">\n");
      out.write("                <div class=\"flex\">\n");
      out.write("                    <div class=\"flex-shrink-0 flex items-center\">\n");
      out.write("                        <h1 class=\"text-2xl font-bold text-purple-600\">ChatWave</h1>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                </div>\n");
      out.write("                <div class=\"flex items-center\">\n");
      out.write("                    <a href=\"login.jsp\" class=\"inline-flex items-center px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-900\">\n");
      out.write("                        Log in\n");
      out.write("                    </a>\n");
      out.write("                    <a href=\"signup.jsp\" class=\"ml-4 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-purple-600 hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-purple-500\">\n");
      out.write("                        Sign up\n");
      out.write("                    </a>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </header>\n");
      out.write("\n");
      out.write("    <!-- Hero Section -->\n");
      out.write("    <section class=\"pt-24 pb-12 md:pt-32 md:pb-20\">\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n");
      out.write("            <div class=\"lg:grid lg:grid-cols-12 lg:gap-8\">\n");
      out.write("                <div class=\"sm:text-center md:max-w-2xl md:mx-auto lg:col-span-6 lg:text-left\">\n");
      out.write("                    <h1>\n");
      out.write("                        <span class=\"block text-sm font-semibold uppercase tracking-wide text-gray-500 sm:text-base lg:text-sm xl:text-base\">\n");
      out.write("                            Introducing\n");
      out.write("                        </span>\n");
      out.write("                        <span class=\"mt-1 block text-4xl tracking-tight font-extrabold sm:text-5xl xl:text-6xl\">\n");
      out.write("                            <span class=\"block text-gray-900\">Team chat for the</span>\n");
      out.write("                            <span class=\"block text-purple-600\">SPIT workplace</span>\n");
      out.write("                        </span>\n");
      out.write("                    </h1>\n");
      out.write("                    <p class=\"mt-3 text-base text-gray-500 sm:mt-5 sm:text-xl lg:text-lg xl:text-xl\">\n");
      out.write("                        ChatWave helps your team collaborate seamlessly. Share files, chat in real-time, and keep your projects moving forward with our intuitive platform.\n");
      out.write("                    </p>\n");
      out.write("                    <div class=\"mt-8 sm:max-w-lg sm:mx-auto sm:text-center lg:text-left lg:mx-0\">\n");
      out.write("                        <div class=\"mt-5 sm:mt-8 sm:flex sm:justify-center lg:justify-start\">\n");
      out.write("                            <div class=\"rounded-md shadow\">\n");
      out.write("                                <a href=\"signup.jsp\" class=\"w-full flex items-center justify-center px-8 py-3 border border-transparent text-base font-medium rounded-md text-white bg-purple-600 hover:bg-purple-700 md:py-4 md:text-lg md:px-10\">\n");
      out.write("                                    Get started\n");
      out.write("                                </a>\n");
      out.write("                            </div>\n");
      out.write("\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("                <div class=\"mt-12 relative sm:max-w-lg sm:mx-auto lg:mt-0 lg:max-w-none lg:mx-0 lg:col-span-6 lg:flex lg:items-center\">\n");
      out.write("                    <div class=\"relative mx-auto w-full rounded-lg shadow-lg lg:max-w-md\">\n");
      out.write("                        <img class=\"w-full\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcSsHiAwPf2vd1wumopOzq3-k4J3IU2sBJhutg&s\" alt=\"ChatWave app screenshot\">\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("\n");
      out.write("    <!-- Features Section -->\n");
      out.write("    <section id=\"features\" class=\"py-12 bg-white\">\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n");
      out.write("            <div class=\"lg:text-center\">\n");
      out.write("                <h2 class=\"text-base text-purple-600 font-semibold tracking-wide uppercase\">Features</h2>\n");
      out.write("                <p class=\"mt-2 text-3xl leading-8 font-extrabold tracking-tight text-gray-900 sm:text-4xl\">\n");
      out.write("                    Everything you need to connect\n");
      out.write("                </p>\n");
      out.write("                <p class=\"mt-4 max-w-2xl text-xl text-gray-500 lg:mx-auto\">\n");
      out.write("                    ChatWave provides all the tools your team needs to communicate effectively.\n");
      out.write("                </p>\n");
      out.write("            </div>\n");
      out.write("\n");
      out.write("            <div class=\"mt-10\">\n");
      out.write("                <div class=\"space-y-10 md:space-y-0 md:grid md:grid-cols-2 md:gap-x-8 md:gap-y-10\">\n");
      out.write("                    <div class=\"relative\">\n");
      out.write("                        <div class=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-purple-500 text-white\">\n");
      out.write("                            <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n");
      out.write("                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 10h.01M12 10h.01M16 10h.01M9 16H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-5l-5 5v-5z\" />\n");
      out.write("                            </svg>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"ml-16\">\n");
      out.write("                            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">Real-time messaging</h3>\n");
      out.write("                            <p class=\"mt-2 text-base text-gray-500\">\n");
      out.write("                                Communicate with your team in real-time with instant messaging that keeps everyone in sync.\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"relative\">\n");
      out.write("                        <div class=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-purple-500 text-white\">\n");
      out.write("                            <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n");
      out.write("                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 21h10a2 2 0 002-2V9.414a1 1 0 00-.293-.707l-5.414-5.414A1 1 0 0012.586 3H7a2 2 0 00-2 2v14a2 2 0 002 2z\" />\n");
      out.write("                            </svg>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"ml-16\">\n");
      out.write("                            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">File sharing</h3>\n");
      out.write("                            <p class=\"mt-2 text-base text-gray-500\">\n");
      out.write("                                Share files, documents, and images with your team members instantly.\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"relative\">\n");
      out.write("                        <div class=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-purple-500 text-white\">\n");
      out.write("                            <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n");
      out.write("                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 20h5v-2a3 3 0 00-5.356-1.857M17 20H7m10 0v-2c0-.656-.126-1.283-.356-1.857M7 20H2v-2a3 3 0 015.356-1.857M7 20v-2c0-.656.126-1.283.356-1.857m0 0a5.002 5.002 0 019.288 0M15 7a3 3 0 11-6 0 3 3 0 016 0zm6 3a2 2 0 11-4 0 2 2 0 014 0zM7 10a2 2 0 11-4 0 2 2 0 014 0z\" />\n");
      out.write("                            </svg>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"ml-16\">\n");
      out.write("                            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">Team channels</h3>\n");
      out.write("                            <p class=\"mt-2 text-base text-gray-500\">\n");
      out.write("                                Organize conversations by project, team, or topic with dedicated channels.\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("\n");
      out.write("                    <div class=\"relative\">\n");
      out.write("                        <div class=\"absolute flex items-center justify-center h-12 w-12 rounded-md bg-purple-500 text-white\">\n");
      out.write("                            <svg class=\"h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n");
      out.write("                                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z\" />\n");
      out.write("                            </svg>\n");
      out.write("                        </div>\n");
      out.write("                        <div class=\"ml-16\">\n");
      out.write("                            <h3 class=\"text-lg leading-6 font-medium text-gray-900\">Secure communications</h3>\n");
      out.write("                            <p class=\"mt-2 text-base text-gray-500\">\n");
      out.write("                                End-to-end encryption ensures your team's conversations remain private and secure.\n");
      out.write("                            </p>\n");
      out.write("                        </div>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("    <!-- CTA Section -->\n");
      out.write("    <section class=\"py-12 bg-purple-600\">\n");
      out.write("        <div class=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n");
      out.write("            <div class=\"text-center\">\n");
      out.write("                <h2 class=\"text-3xl font-extrabold text-white sm:text-4xl\">\n");
      out.write("                    <span class=\"block\">Ready to get started?</span>\n");
      out.write("                    <span class=\"block\">Sign up for ChatWave today.</span>\n");
      out.write("                </h2>\n");
      out.write("                <p class=\"mt-4 text-lg leading-6 text-purple-200\">\n");
      out.write("                    Join thousands of teams that use ChatWave to collaborate more effectively.\n");
      out.write("                </p>\n");
      out.write("                <div class=\"mt-8 flex justify-center\">\n");
      out.write("                    <div class=\"inline-flex rounded-md shadow\">\n");
      out.write("                        <a href=\"signup.jsp\" class=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-purple-600 bg-white hover:bg-purple-50\">\n");
      out.write("                            Sign up for free\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                    <div class=\"ml-3 inline-flex\">\n");
      out.write("                        <a href=\"#features\" class=\"inline-flex items-center justify-center px-5 py-3 border border-transparent text-base font-medium rounded-md text-white bg-purple-700 hover:bg-purple-800\">\n");
      out.write("                            Learn more\n");
      out.write("                        </a>\n");
      out.write("                    </div>\n");
      out.write("                </div>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </section>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
